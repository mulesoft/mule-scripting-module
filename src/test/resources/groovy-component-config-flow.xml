<?xml version="1.0" encoding="UTF-8"?>
<!--// START SNIPPET: full-config -->
<!--// START SNIPPET: component-example -->
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <flow name="inlineScriptMutateProperty">
        <script:component>
            <script:script engine="groovy"><![CDATA[
            message =  new org.mule.functional.junit4.TestLegacyMessageBuilder(message).addOutboundProperty('foo',
            'bar-mutated').build()
        ]]>
            </script:script>
        </script:component>
        <test:assert expression="#[mel:message.outboundProperties.foo == 'bar-mutated']"/>
    </flow>

    <flow name="inlineScriptAddProperty">
        <script:component>
            <script:script engine="groovy">
                <![CDATA[
                message = new org.mule.functional.junit4.TestLegacyMessageBuilder(message).addOutboundProperty('foo',
                'bar').build()
            ]]></script:script>
        </script:component>
        <test:assert expression="#[mel:message.outboundProperties.foo == 'bar']"/>
    </flow>

    <flow name="inlineScriptMutatePropertiesMap">
        <script:component>
            <script:script engine="groovy"><![CDATA[
                outbound = new HashMap()              
             ]]></script:script>
        </script:component>
        <test:assert expression="#[mel:message.outboundProperties.foo == 'bar']"/>
        <test:assert expression="#[mel:payload instanceof HashMap]"/>
    </flow>

    <flow name="inlineScriptMutateVariable">
        <script:component>
            <script:script engine="groovy">
                vars['foo'] = 'bar-mutated'
             </script:script>
        </script:component>
        <test:assert expression="#[vars.foo == 'bar-mutated']"/>
    </flow>
    
    <flow name="inlineScriptAddVariable">
        <script:component>
            <script:script engine="groovy">
                vars['foo'] = 'bar'
             </script:script>
        </script:component>
        <test:assert expression="#[vars.foo == 'bar']"/>
    </flow>

    <flow name="inlineScriptMutateVariablesMap">
        <script:component>
            <script:script engine="groovy">
                vars = new HashMap()              
             </script:script>
        </script:component>
        <test:assert expression="#[vars.foo == 'bar']"/>
        <test:assert expression="#[mel:payload is HashMap]"/>
    </flow>

    <flow name="inlineScriptMutatePayload">
        <script:component>
            <script:script engine="groovy">
                payload = 'bar-mutated'               
             </script:script>
        </script:component>
        <test:assert expression="#[payload == 'bar-mutated']"/>
    </flow>
    
    <flow name="scriptExpressionVariables">
        <script:component>
            <script:script engine="groovy">
                <script:property key="expr1" value="#[vars.prop1]"/>
                <script:property key="expr2" value="#[vars.prop2]"/>
                <script:text>
                        payload = expr1 + expr2
                </script:text>
            </script:script>
        </script:component>
        <test:assert expression="#[payload == 'ReceivedA-OK']"/>
    </flow>
    
    <flow name="scriptReferencesAppClass">
        <script:component>
            <script:script engine="groovy">
                <script:text>
                    payload = new org.mule.tck.testmodels.fruit.Apple()
                </script:text>
            </script:script>
        </script:component>
    </flow>
    
</mule>

